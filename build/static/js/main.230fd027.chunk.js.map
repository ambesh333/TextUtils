{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setMyStyle","btntext","setBtnText","className","style","id","type","onClicktype","border","Navbar","props","mode","to","title","aboutText","onClick","toggleMode","htmlfor","TextForm","text","setText","Color","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","setInterval","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.230fd027.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle, setMyStyle] = useState(\r\n    {\r\n        color : 'black',\r\n        backgroundColor : 'white'\r\n\r\n    })\r\n\r\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color ==='black'){\r\n        setMyStyle({\r\n\r\n                color : 'white',\r\n                backgroundColor : 'black',\r\n                border : \"1px solid white\"\r\n        })\r\n         setBtnText(\"Enable light mode\")\r\n        }\r\n        else{\r\n        setMyStyle({\r\n\r\n            color : 'black',\r\n            backgroundColor : 'white'\r\n             \r\n        })\r\n        setBtnText(\"Enable Dark mode\");\r\n       }\r\n    }\r\n \r\n    return (\r\n        <div className = \"container\" style ={myStyle}>\r\n         <h1 className = \"my-3\">About Us </h1>   \r\n        <div className=\"accordion\" id=\"accordionExample\" style ={myStyle}>\r\n        <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n    <button className=\"accordion-button\" type=\"button\" style ={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n    </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body\" style ={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n    </div>\r\n</div>\r\n<div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n    <button className=\"accordion-button collapsed\" style ={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n    </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body\" style ={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n    </div>\r\n</div>\r\n<div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n    <button className=\"accordion-button collapsed\" style ={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n    </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body\" style ={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n    <div className=\"conatiner my-3\">\r\n    <button onClicktype = {toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n    </div>  \r\n        </div>\r\n      \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link  } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"\\\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"\\\">Home</Link>\r\n\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">{props.aboutText}</Link>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'}?'dark' : 'light'`}>\r\n        <input className=\"form-check-input\"onClick ={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title :PropTypes.string.isRequired, \r\n    aboutText : PropTypes.string.isRequired}\r\n\r\n    Navbar.defaultProps = {\r\n \r\n        aboutText : 'About '\r\n      };","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) \r\n{\r\n\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase\",\"success\" );\r\n    }\r\n\r\n    const handleClick = ()=>{\r\n        console.log(\"lower case was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase\",\"success\" );\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const [text, setText ] = useState('Enter text here');\r\n    return (\r\n        <>\r\n        <div className =\"container\" style ={{Color : props.mode==='dark'?'white' : 'black'}} >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value = {text} onChange = {handleOnChange}  style ={{backgroundColor : props.mode==='dark'?'grey' : 'white',color:  props.mode==='dark'?'white' : 'black'}}\r\n         id=\"myBox\" rows=\"8\"></textarea>\r\n         </div>\r\n        <button className=\"btn btnprime\" onClick ={handleUpClick}>Convert into Uppercase</button>\r\n        <button className=\"btn btnprime\" onClick ={handleClick}>Convert into Lowercase</button>\r\n       </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize= (word)=>\r\n    {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize (props.alert.type)}</strong> :{props.alert.msg}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","\nimport './Appa.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\n\n\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n const [alert, setAlert] = useState(null);\n\n\n\n const showAlert =(message,type)=>\n {\n   setAlert ({\n     msg: message,\n     type: type\n   })\n   setTimeout(() => {\n     setAlert(null)\n   }, 1500);\n }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n  setMode('dark');\n  document.body.style.backgroundColor = \"grey\";\n  showAlert(\"Dark mode has been enable\",\"success\");\n  document.title = \"TextUtils - Darkmode \";\n}\n  else {\n    setMode( 'light');\n    document.body.style.backgroundColor = \"white\";\n   showAlert(\"light mode has been enable\",\"success\");\n  document.title = \"TextUtils - lightmode \";\n  setInterval(() => {\n    \n    document.title =\"TextUtils is Amazing Mode\";\n  }, 200);\n\n  setInterval(() => {\n    \n    document.title =\"Install TextUtils now\";\n  }, 1500);\n\n}\n  }\n  \n  return (\n    <>\n    <Router>\n    <Navbar title = \"TextUtils\"mode = {mode} toggleMode={toggleMode}/> \n    <Alert alert = {alert}/>\n    <div className =\"container\">\n    <Switch> \n           <Route exact path=\"/about\">\n            <About/>\n          </Route> \n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading =\"Enter the text to analyse below\" mode = {mode}/>\n          </Route>\n        {} </Switch>\n\n    </div>\n    </Router>\n    </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}